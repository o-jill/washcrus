# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will download a prebuilt Ruby version, install dependencies and run tests with Rake
# For more information see: https://github.com/marketplace/actions/setup-ruby-jruby-and-truffleruby

name: Chrome test w/ ruby3

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ruby-version: ['3.0', '3.1']
        kifu: ['-N0', '-N1', '-N2', '-N3', '-N4', '-N5', '-N6']
#    services:
#      selenium:
#        image: selenium/standalone-chrome:3.141.59-vanadium
#        ports:
#          - 4444:4444
#        volumes:
#          - /dev/shm:/dev/shm
    steps:
    - uses: actions/checkout@v2
    - name: 'Setup Google Chrome'
      run: |
        wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        echo "deb http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee -a /etc/apt/sources.list.d/google-chrome.list
        sudo apt-get update -qqy
        sudo apt-get -qqy install google-chrome-stable
        CHROME_VERSION=$(google-chrome-stable --version)
        CHROME_FULL_VERSION=${CHROME_VERSION%%.*}
        CHROME_MAJOR_VERSION=${CHROME_FULL_VERSION//[!0-9]}
        sudo rm /etc/apt/sources.list.d/google-chrome.list
        export CHROMEDRIVER_VERSION=`curl -s https://chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROME_MAJOR_VERSION%%.*}`
        curl -L -O "https://chromedriver.storage.googleapis.com/${CHROMEDRIVER_VERSION}/chromedriver_linux64.zip"
        unzip chromedriver_linux64.zip && chmod +x chromedriver && sudo mv chromedriver /usr/local/bin
        export CHROMEDRIVER_VERSION=`curl -s https://chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROME_MAJOR_VERSION%%.*}`
        curl -L -O "https://chromedriver.storage.googleapis.com/${CHROMEDRIVER_VERSION}/chromedriver_linux64.zip"
        unzip chromedriver_linux64.zip && chmod +x chromedriver && sudo mv chromedriver /usr/local/bin
        chromedriver -version
#      shell: bash
    - name: Set up Ruby
    # To automatically get bug fixes and new Ruby versions for ruby/setup-ruby,
    # change this to (see https://github.com/ruby/setup-ruby#versioning):
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: true # runs 'bundle install' and caches installed gems automatically
    - name: ruby is here
      run: |
        which ruby
        /usr/bin/env ruby --version
    - name: Setup gems
      run: |
        gem install webrick -v1.7.0
        gem install mailcatcher
        gem install rubyzip -v2.3.0
        gem install selenium-webdriver -v4.1
        gem install unindent
    - name: launch xvfb
      run: Xvfb :99 &
    - name: launch mail server
      run: mailcatcher
    - name: launch web server
      run: |
        ruby ./travisci/webserver.rb 2>log/web.log &
        sleep 3 # give some software a moment to start
    - name: Run tests
      continue-on-error: true # とにかくログを保存するとこまで行きたい
      id: usecase
      run: |
        chmod ugo+x ./travisci/runontravis.sh
        ./travisci/runontravis.sh ${{ matrix.kifu }}
      env:
        DISPLAY: :99
    - name: Byouyomi
      continue-on-error: true # とにかくログを保存するとこまで行きたい
      id: byouyomi
      run: bundle exec ruby ./observer/byouyomichan.rb 10
    - name: save taikyoku logs
      uses: actions/upload-artifact@v2
      with:
        name: taikyoku_chrome${{ matrix.ruby-version }}-kifu${{ matrix.kifu }}
        path: |
          config
          db
          log
          taikyoku
    - name: check error u
      if: ${{ steps.usecase.outcome == 'failure' }}
      run: |
        echo ${{ steps.usecase.outcome }} == 'failure'
        exit 1
    - name: check error b
      if: ${{ steps.byouyomi.outcome == 'failure' }}
      run: |
        echo ${{ steps.byouyomi.outcome }} == 'failure'
        exit 1
